#set(
    $gitHookConfiguration = [
        {
            "legend": "Repository",
            "description": "This event is triggered when changes are pushed to a repository via git push command.",
            "triggers": [
                {
                    "id": "push",
                    "label": "Push"
                }
            ]
        },
        {
            "legend": "Branch",
            "description": "These events are triggered when user creates/deletes branch via Bitbucket web-interface.",
            "triggers": [
                {
                    "id": "branch-create",
                    "label": "Create"
                },
                {
                    "id": "branch-delete",
                    "label": "Delete"
                }
            ]
        },
        {
            "legend": "Tag",
            "description": "These events are triggered when user creates/deletes tag via Bitbucket web-interface.",
            "triggers": [
                {
                    "id": "tag-create",
                    "label": "Create"
                },
                {
                    "id": "tag-delete",
                    "label": "Delete"
                }
            ]
        },
        {
            "legend": "File",
            "description": "This event is triggered when user edits a file via Bitbucket web-interface.",
            "triggers": [
                {
                    "id": "file-edit",
                    "label": "Edit"
                }
            ]
        },
        {
            "legend": "Pull Request",
            "description": "Note that this event is triggered every time user visits pull request details page. <br/>Hook-script <b>will not</b> receive any stdin.",
            "triggers": [
                {
                    "id": "pull-request-merge",
                    "label": "Merge Check"
                }
            ]
        },
        {
            "legend": "Internal",
            "description": "Invoked when merge(MergeCommandParameters) is called. <br/>Note that this is a low-level SCM operation and should not generally be intercepted.",
            "triggers": [
                {
                    "id": "merge",
                    "label": "Merge Event"
                }
            ]
        }
    ]
)

#set($preReceiveConfiguration = $gitHookConfiguration.clone())
#set($postReceiveConfiguration = $gitHookConfiguration.clone())

#set($postReceiveConfigurationMergeCheck = $postReceiveConfiguration.get(4).clone())
#set($postReceiveConfigurationMergeCheck.description = "This event will be triggered after successfull merge done from Bitbucket web-interface.")
$postReceiveConfiguration.set(4, $postReceiveConfigurationMergeCheck)

#set($mergeCheckConfiguration = [])
$mergeCheckConfiguration.add($preReceiveConfiguration.get(4))
$mergeCheckConfiguration.add($preReceiveConfiguration.get(5))

#set(
    $triggerConfigurations = [
        {
            "id": "pre_receive",
            "title": "Pre-receive Triggers",
            "groups": $preReceiveConfiguration
        },

        {
            "id": "post_receive",
            "title": "Post-receive Triggers",
            "groups": $postReceiveConfiguration
        },

        {
            "id": "merge_check",
            "title": "Merge Check Triggers",
            "groups": $mergeCheckConfiguration
        }
    ]
)
#disable_html_escaping()
<!DOCTYPE html>
<html>
    <head>
        <meta name="decorator" content="atl.admin">
        $webResourceManager.requireResource("com.ngs.stash.externalhooks.external-hooks:web-resources")
    </head>
    <body>
        <form class="aui" id="rq_hooks_global_settings_form">
            <h2>External Hooks: Settings</h2>

            #foreach($configuration in $triggerConfigurations)
                <h3>$configuration.title</h3>

                #foreach($group in $configuration.groups)
                <fieldset class="group">
                    <legend><span>$group.legend</span></legend>
                    #foreach($trigger in $group.triggers)
                        #set(
                            $inputID = "rq_hooks_" + $configuration.id + "_" + $trigger.id
                        )
                        <div class="checkbox">
                            <input
                                class="checkbox"
                                type="checkbox"
                                name="triggers.${configuration.id}.${trigger.id}"
                                id="$inputID"
                                />
                            <label for="$inputID">$trigger.label</label>
                        </div>
                    #end
                    #if($group.description)
                    <div class="description">$group.description</div>
                    #end
                </fieldset>
                #end
            #end

            <div class="aui-message aui-message-warning">
                <p class="title">
                <span class="checkbox">
                    <input
                        class="checkbox"
                        type="checkbox"
                        name="apply-existing"
                        id="rq_hooks_apply"
                        />
                    <label for="rq_hooks_apply">Apply to existing hooks</label>
                </span>
                </p>

                <p>Settings will apply only to newly configured hooks if this checkbox is not set.</p>
            </div>
            <button class="aui-button aui-button-primary" id="rq_hooks_settings_save">Save</button>
            <button class="aui-button" id="rq_hooks_settings_defaults" type="button">Load Default Settings</button>
        </form>
    </body>
</html>
